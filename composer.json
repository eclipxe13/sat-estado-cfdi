{
    "name": "phpcfdi/sat-estado-cfdi",
    "description": "Consulta el estado de un cfdi en el webservice del SAT",
    "license": "MIT",
    "keywords": [
        "phpcfdi",
        "sat",
        "cfdi",
        "ConsultaCFDIService.svc"
    ],
    "authors": [
        {
            "name": "Carlos C Soto",
            "email": "eclipxe13@gmail.com"
        }
    ],
    "homepage": "https://github.com/phpcfdi/sat-estado-cfdi",
    "support": {
        "issues": "https://github.com/phpcfdi/sat-estado-cfdi/issues",
        "source": "https://github.com/phpcfdi/sat-estado-cfdi"
    },
    "require": {
        "php": ">=8.2"
    },
    "require-dev": {
        "ext-curl": "*",
        "ext-dom": "*",
        "ext-soap": "*",
        "guzzlehttp/guzzle": "^7.8",
        "guzzlehttp/psr7": "^2.6",
        "phpcfdi/cfdi-expresiones": "^3.0",
        "phpunit/phpunit": "^11.0.3",
        "psr/http-client": "^1.0 || ^2.0",
        "psr/http-factory": "^1.0 || ^2.0",
        "psr/http-message": "^1.0 || ^2.0"
    },
    "suggest": {
        "ext-dom": "Extensión para poder usar el cliente HTTP PSR",
        "ext-soap": "Extensión para poder usar el cliente SOAP",
        "phpcfdi/cfdi-expresiones": "Genera expresiones de CFDI 4.0, CFDI 3.3, CFDI 3.2, RET 1.0 y RET 2.0",
        "psr/http-client": "Requerimiento del cliente HTTP PSR",
        "psr/http-factory": "Requerimiento del cliente HTTP PSR",
        "psr/http-message": "Requerimiento del cliente HTTP PSR"
    },
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "PhpCfdi\\SatEstadoCfdi\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "PhpCfdi\\SatEstadoCfdi\\Tests\\": "tests/"
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": {
            "*": "dist"
        }
    },
    "scripts": {
        "dev:build": [
            "@dev:fix-style",
            "@dev:test"
        ],
        "dev:check-style": [
            "@php tools/composer-normalize normalize --dry-run",
            "@php tools/php-cs-fixer fix --dry-run --verbose",
            "@php tools/phpcs --colors -sp"
        ],
        "dev:coverage": [
            "@php -dzend_extension=xdebug.so -dxdebug.mode=coverage vendor/bin/phpunit --coverage-html build/coverage/html/"
        ],
        "dev:fix-style": [
            "@php tools/composer-normalize normalize",
            "@php tools/php-cs-fixer fix --verbose",
            "@php tools/phpcbf --colors -sp || true"
        ],
        "dev:test": [
            "@dev:check-style",
            "@php vendor/bin/phpunit --testsuite unit --testdox --stop-on-failure",
            "@php vendor/bin/phpunit --testsuite functional --testdox --stop-on-failure",
            "@php tools/phpstan analyse --no-progress",
            "@php tools/infection --no-progress --no-interaction --show-mutations"
        ]
    },
    "scripts-descriptions": {
        "dev:build": "DEV: run dev:fix-style and dev:tests, run before pull request",
        "dev:check-style": "DEV: search for code style errors using composer-normalize, php-cs-fixer and phpcs",
        "dev:coverage": "DEV: run phpunit with xdebug and storage coverage in build/coverage/html/",
        "dev:fix-style": "DEV: fix code style errors using composer-normalize, php-cs-fixer and phpcbf",
        "dev:test": "DEV: run dev:check-style, phpunit, phpstan and infection"
    }
}
